FILE SYSTEM BASIC

Everything in Unix is considered to be a file, including physical devices such as DVD-ROMs, USB devices, and floppy drives.

1. Directory Structure
   Unix uses a hierarchical file system structure, much like an upside-down tree,
   with root (/) at the base of the file system and all other directories spreading
   from there.
   
   A Unix filesystem is a collection of files and directories :
   a. It has a root directory (/) that contains other files and directories.
   b. Each file or directory is uniquely identified by its name, the directory in
      which it resides, and a unique identifier, typically called an inode.
   c. By convention, the root directory has an inode number of 2 and the lost+found
      directory has an inode number of 3. Inode numbers 0 and 1 are not used. File
      inode numbers can be seen by specifying the -i option to ls command.
   d. It is self-contained. There are no dependencies between one filesystem and
      another.
   Directories on Unix/Linux :
   - / 
     This is the root directory which should contain only the directories needed at
     the top level of the file structure.
   - /bin
     This is where the executable files are located. These files are available to
     all users
   - /dev
     These are device drivers
   - /etc
     Supervisor directory commands, configuration files, disk configuration files,
     valid user lists, groups, ethernet, hosts, where to send critical messages
   - /lib
     Contains shared library files and sometimes other kernel-related files
   - /boot
     Contains files for booting the system
   - /home
     Contains the home directory for users and other accounts
   - /mnt
     Used to mount other temporary file systems, such as cdrom and floppy for the
     CD-ROM drive and floppy diskette drive, respectively
   - /proc
     Contains all processes marked as a file by process number or other
     information that is dynamic to the system
   - /tmp
     Holds temporary files used between System Boots
   - /usr  
     Used for miscellaneous purposes, and can be used by many users. Includes
     administrative commands, shared files, library files, and others
   - /var
     Typically contains variable-length files such as log and print files and any
     other type of file that may contain a variable amount of data
   - /sbin
     Contains binary (executable) files, usually for system administration. For
     example, fdisk and ifconfig utlities
   - /kernel
     Contains Kernel files
     
2. Navigating the File System
   1. cat filename
      Displays a filename
   2. cd dirname
      Moves you to the identified directory
   3. cp file1 file2
      Copies one file/directory to the specified location
   4. file filename
      Identifies the file type (binary, text, etc)
   5. find filename dir
      Finds a file/directory
   6. head filename
      Shows the beginning of a file
   7. less filename
      Browses through a file from the end or the beginning
   8. ls dirname
      Shows the contents of the directory specified
   9. mkdir dirname
      Creates the specified directory
  10. more filename
      Browses through a file from the beginning to the end
  11. mv file1 file2
      Moves the location of, or renames a file/directory
  12. pwd
      Shows the current directory the user is in
  13. rm filename
      Removes a file
  14. rmdir dirname
      Removes a directory
  15. tail filename
      Shows the end of a file
  16. touch filename
      Creates a blank file or modifies an existing file or its attributes
  17. whereis filename
      Shows the location of a file
  18. which filename
      Shows the location of a file if it is in your PATH
      
3. The df Command
   The command df -k (disk free) displays the disk space usage in kilobytes
   $ df -k
   $ df -h (human readable)
   The df -k output is generally the same on all Unix systems.
   1. Filesystem
      The physical file system name
   2. kbytes
      Total kilobytes of space available on the storage medium
   3. Used
      Total kilobytes of space used (by files)
   4. Available
      Total kilobytes available for use
   5. Capacity
      Percentage of total space used by files
   6. Mounted on
      What the file system is mounted on
      
4. The du Command
   The du (disk usage) command enables you to specify directories to show disk
   space usage on a particular directory.
   Syntax :
   $ df /home
   $ df /etc
   .........
   $ df -h /etc (human readable)
   $ df -h /home
   
5. Mounting the File System
   A file system must be mounted in order to be usable by the system. To see what
   is currently mounted (available for use) on the system.
      $ mount
   The /mnt directory, by the Unix convention, is where temporary mounts (such as
   CDROM drives, remote network drives, and floppy drives) are located.
   Syntax :
      $ mount -t file_system_type device_to_mount directory_to_mount_to
   Contoh : 
   1. Mount a CD-ROM to the directory /mnt/cdrom"
      $ mount -t iso12345 /dev/cdrom /mnt/cdrom
   2. Mount a HDD to the directory /mnt/HDD
      $ mount -t hddName /dev/HDD /dev/HDD
   This assumes that your CD-ROM device is called /dev/cdrom and that you want to
   mount it to /mnt/cdrom. 

6. Unmounting The File System
   To unmount (remove) the file system from your system, use the umount command
   by identifying the mount point or device.
   Syntax :
   $ umount /dev/cdrom
   
   The mount command enables to access file system, but on most modern Unix
   systems, the automount function makes this process invisible to the user and
   requires no intervention.
   
7. User and Group Quotas
   The user and group quotas provide the mechanisms by which the amount of space
   used by a single user or all users within a specific group can be limited to a
   value defined by the administrator.
   
   Quotas operate around two limits that allow the user to take some action if
   the amount of space or number of disk blocks start to exceed the administrator
   defined limits :
   - Soft Limit − If the user exceeds the limit defined, there is a grace period
     that allows the user to free up some space.
   - Hard Limit − When the hard limit is reached, regardless of the grace period,
     no further files or blocks can be allocated.
   commands to administer quotas :
   1. quota
      Displays disk usage and limits for a user of group
   2. edquota
      This is a quota editor. Users or Groups quota can be edited using this
      command
   3. quotacheck
      Scans a filesystem for disk usage, creates, checks and repairs quota files
   4. setquota
      This is a command line quota editor
   5. quotaon
      This announces to the system that disk quotas should be enabled on one or
      more filesystems
   6. quotaoff
      This announces to the system that disk quotas should be disabled for one or
      more filesystems
   7. repquota
      This prints a summary of the disc usage and quotas for the specified file systems
